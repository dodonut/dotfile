set hidden true
set preview true
set color256 true
set incsearch true
set info size:time

set shell sh

set shellopts '-eu'

map x $$f
map X !$f

cmd open ${{
    case $(file --mime-type $f -b) in
        text/*) $EDITOR $fx;;
        *) for f in $fx; do setsid $OPENER $f > /dev/null 2> /dev/null & done;;
    esac
}}

cmd mkdir ${{
  printf "Directory Name: "
  read ans
  mkdir $ans
}}

cmd mkfile ${{
  printf "File Name: "
  read ans
  $EDITOR $ans
}}

cmd chmod ${{
  printf "Mode Bits: "
  read ans

  for file in "$fx"
  do
    chmod $ans $file
  done

  lf -remote 'send reload'
}}

cmd sudomkfile ${{
  printf "File Name: "
  read ans
  sudo $EDITOR $ans
}}

# make sure trash folder exists
# %mkdir -p ~/.trash

cmd trash %set -f; mv $fx ~/.local/share/Trash/files

# define a custom 'delete' command
cmd delete ${{
    set -f
    printf "$fx\n"
    printf "delete?[y/n]"
    read ans
    [ $ans = "y" ] && rm -rf $fx
}}

# extract the current file with the right command
# (xkcd link: https://xkcd.com/1168/)
cmd extract ${{
    set -f
    case $f in
        *.tar.bz|*.tar.bz2|*.tbz|*.tbz2) tar xjvf $f;;
        *.tar.gz|*.tgz) tar xzvf $f;;
        *.tar.xz|*.txz) tar xJvf $f;;
        *.zip) unzip $f;;
        *.rar) unrar x $f;;
        *.7z) 7z x $f;;
    esac
}}

# compress current file or selected files with tar and gunzip
cmd tar ${{
    set -f
    mkdir $1
    cp -r $fx $1
    tar czf $1.tar.gz $1
    rm -rf $1
}}

# compress current file or selected files with zip
cmd zip ${{
    set -f
    mkdir $1
    cp -r $fx $1
    zip -r $1.zip $1
    rm -rf $1
}}

# Archive Mappings
map az zip
map at tar

# Delete Mappings
map tt trash

# Bindings
# Remove some defaults
map m

# Basic Functions
map . set hidden!
map DD delete
map <enter> open
map mf mkfile
map mr sudomkfile
map md mkdir
map ms $mkscript
map mod chmod
map r rename
map R reload
map C clear
map U unselect
map e $/usr/bin/nvim.appimage $id
map gt cd ~/.local/share/Trash/files
map gpg cd ~/Documents/tilix/pgs/pagseguro-api
map gps cd ~/Documents/personal/
map gcd cd .
